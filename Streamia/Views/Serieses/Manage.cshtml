@model IEnumerable<Series>
@{
    ViewData["Title"] = "Manage Movies";
}

<partial name="~/Views/Partials/_Navigation.cshtml" />
<partial name="~/Views/Partials/_Search.cshtml" />

<hr />

<table class="table table-striped table-bordered">
    <thead>
        <tr>
            <th>Name</th>
            <th>Category</th>
            <th>State</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var data in Model)
        {
            <tr>
                <td>@data.Name</td>
                <td>@data.Category.Name</td>
                <td id="state-@data.Id">
                    @{
                        string stateClass = "warning";
                        if (data.State == StreamState.READY)
                        {
                            stateClass = "success";
                        }
                    }
                    <i class="fa fa-circle text-@stateClass"></i> @data.State
                </td>
                <td>
                    <a class="btn btn-secondary" asp-action="details" asp-route-id="@data.Id"><i class="fa fa-info-circle"></i></a>
                    <a class="btn btn-success" asp-action="edit" asp-route-id="@data.Id"><i class="fa fa-edit"></i></a>
                    <form asp-action="delete"
                          asp-route-id="@data.Id"
                          style="display:inline"
                          onsubmit="return confirm('Are you sure you want to proceed?')">
                        <button class="btn btn-danger">
                            <i class="fa fa-trash"></i>
                        </button>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script src="~/lib/signalr/dist/browser/signalr.min.js"></script>
    <script>
        //window.addEventListener('load', function () {
        //    var connection = new signalR.HubConnectionBuilder().withUrl("/movie-status-hub").build();
        //    connection.on("Update", function (data) {
        //        var btn = $(`#btn-${data.sourceId}`);
        //        var stateIndicator = $(`#state-${data.sourceId}`);
        //        btn.removeAttr("disabled");
        //        if (data.state === 1) {
        //            stateIndicator.html('<i class="fa fa-circle text-success"></i> STARTED');
        //            btn.attr("data-stream-state", "0")
        //                .removeClass("btn-primary")
        //                .addClass("btn-warning")
        //                .html('<i class="fa fa-pause"></i>');
        //        } else if (data.state === 0) {
        //            stateIndicator.html('<i class="fa fa-circle text-danger"></i> STOPPED');
        //            btn.attr("data-stream-state", "1")
        //                .removeClass("btn-warning")
        //                .addClass("btn-primary")
        //                .html('<i class="fa fa-play"></i>');
        //        }
        //    });
        //    connection.start();
        //    $(".stream-state-btn").on("click", function () {
        //        var currentHTML = $(this).html();
        //        var streamId = parseInt($(this).attr("data-stream-id"));
        //        var streamState = parseInt($(this).attr("data-stream-state"));
        //        $(this).attr("disabled", "disabled").html('<i class="fa fa-fw fa-spinner fa-pulse"></i>');
        //        connection.invoke("Update", streamId, streamState);
        //    });
        //});
    </script>
}
