@model Movie
@{
    ViewData["Title"] = "Add Movie";
    ViewData["Icon"] = "plus";
}

@section Styles {
    <link href="~/lib/select2/css/select2.min.css" rel="stylesheet" />
    <link href="~/ttskch/select2-bootstrap4-theme/dist/select2-bootstrap4.min.css" rel="stylesheet" />
    <link href="~/lib/switchery/switchery.css" rel="stylesheet" />
}

<form method="post">
    <div class="row">
        <div class="form-group col-md-3">
            <label asp-for="Name"></label>
            <div id="searchia">
                <input asp-for="Name" class="form-control" autocomplete="off" />
            </div>
            <span class="text-danger" asp-validation-for="Name"></span>
        </div>
        <div class="form-group col-md-3">
            <label asp-for="Source"></label>
            <div class="directory-browser-container">
                <input asp-for="Source" class="form-control" placeholder="URL or browse servers" />
                <button type="button" class="directory-browser-btn main-btn" data-toggle="modal" data-target="#directory-browser">
                    <i class="fa fa-folder-open"></i>
                </button>
            </div>
            <span class="text-danger" asp-validation-for="Source"></span>
        </div>
        <div class="form-group col-md-3">
            <label asp-for="CategoryId"></label>
            <select asp-for="CategoryId" asp-items="@(new SelectList(ViewBag.Categories,"Id","Name"))" class="form-control">
            </select>
            <span class="text-danger" asp-validation-for="CategoryId"></span>
        </div>
        <div class="form-group col-md-3">
            <label asp-for="PosterUrl"></label>
            <input asp-for="PosterUrl" class="form-control" />
            <span class="text-danger" asp-validation-for="PosterUrl"></span>
        </div>
        <div class="form-group col-md-3">
            <label asp-for="Overview"></label>
            <input asp-for="Overview" class="form-control" />
            <span class="text-danger" asp-validation-for="Overview"></span>
        </div>
        <div class="form-group col-md-3">
            <label asp-for="Cast"></label>
            <input asp-for="Cast" class="form-control" />
            <span class="text-danger" asp-validation-for="Cast"></span>
        </div>
        <div class="form-group col-md-3">
            <label asp-for="Director"></label>
            <input asp-for="Director" class="form-control" />
            <span class="text-danger" asp-validation-for="Director"></span>
        </div>
        <div class="form-group col-md-3">
            <label asp-for="Gener"></label>
            <input asp-for="Gener" class="form-control" />
            <span class="text-danger" asp-validation-for="Gener"></span>
        </div>
        <div class="form-group col-md-3">
            <label asp-for="ReleaseDate"></label>
            <input asp-for="ReleaseDate" class="form-control" />
            <span class="text-danger" asp-validation-for="ReleaseDate"></span>
        </div>
        <div class="form-group col-md-3">
            <label asp-for="Runtime"></label>
            <input asp-for="Runtime" class="form-control" />
            <span class="text-danger" asp-validation-for="Runtime"></span>
        </div>
        <div class="form-group col-md-3">
            <label asp-for="Rating"></label>
            <input asp-for="Rating" class="form-control" />
            <span class="text-danger" asp-validation-for="Rating"></span>
        </div>
        <div class="form-group col-md-3">
            <label asp-for="BouquetIds"></label>
            <select asp-for="BouquetIds" asp-items="@(new SelectList(ViewBag.Bouquets,"Id","Name"))" class="form-control" multiple></select>
            <span class="text-danger" asp-validation-for="BouquetIds"></span>
        </div>
    </div>
    <div class="row">
        <div class="form-group col-md-3">
            <input asp-for="DirectSource" class="js-switch" />
            <label asp-for="DirectSource"></label>
        </div>
    </div>
    <hr />
    <button class="btn btn-success">
        <i class="fa fa-plus"></i> Add
    </button>
</form>

<!-- Directory Browser -->
<div class="modal fade" id="directory-browser" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Directory Browser</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="loader text-center">
                    <i class="fa fa-5x fa-fw fa-spinner fa-pulse"></i>
                </div>
                <select id="directory-browser-server" asp-items="@(new SelectList(ViewBag.Servers,"Id","Name"))" class="form-control mb-2">
                    <option value="0">-- Server to browse --</option>
                </select>
                <hr />
                <div class="full-path"></div>
                <div class="directory-browser-content">
                    <h3 class="text-secondary text-center">Files & Folders will show here</h3>
                </div>
                <hr />
                <button class="btn btn-secondary directory-browser-back-btn">
                    <i class="fa fa-chevron-left"></i> Previous directory
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script src="~/lib/signalr/dist/browser/signalr.min.js"></script>
    <script src="~/lib/select2/js/select2.full.min.js"></script>
    <script src="~/lib/switchery/switchery.js"></script>
    <script src="~/js/Searchia.js" asp-append-version="true"></script>
    <script src="~/js/TMDB.js" asp-append-version="true"></script>
    <script src="~/js/Exploreia.js" asp-append-version="true"></script>
    <script>

        let searchia = new Searchia();
        let tmdb = new TMDB('415e9238d5188172426c3858b367e468');

        searchia.onTyping(value => {
            tmdb.search(value, 'movie', response => {
                response.results.forEach(result => {
                    searchia.onResult(result.id, `${result.title} (${result.release_date ? result.release_date.split('-')[0] : ''})`);
                });
            });
        });

        searchia.onResultClick(id => {
            tmdb.find(`movie/${id}`, 'credits', response => {
                let genres = [];
                let cast = [];
                let director = null;
                response.genres.forEach(genre => {
                    genres.push(genre.name);
                });
                response.credits.cast.forEach(credit => {
                    cast.push(credit.name);
                });
                for (let person of response.credits.crew) {
                    if (person.department === "Directing") {
                        director = person.name;
                        break;
                    }
                }
                $('#Name').val(response.title);
                $('#PosterUrl').val(tmdb.generatePosterUrl(response.poster_path));
                $('#Overview').val(response.overview);
                $('#Rating').val(response.vote_average);
                $('#Runtime').val(response.runtime);
                $('#Gener').val(genres.join(','));
                $('#Cast').val(cast.join(','));
                $('#ReleaseDate').val(response.release_date);
                $('#Director').val(director);
            });
        });

        $('select').select2({
            theme: 'bootstrap4'
        });

        let elems = Array.prototype.slice.call(document.querySelectorAll('.js-switch'));

        elems.forEach(function (html) {
            new Switchery(html);
        });

        window.addEventListener('load', function () {
            var connection = new signalR.HubConnectionBuilder().withUrl("/directory-browser-hub").build();
            var pathStack = [];

            function createPath(stack) {
                if (stack.length === 0) {
                    return '/';
                }
                return '/' + stack.join('/');
            }

            function prepareFiles(path) {
                if (path.slice(-1) == '/') {
                    return path.slice(0, path.length - 1);
                }
                return path;
            }

            function isDirectory(path) {
                return path.slice(-1) == '/';
            }

            function resetBrowser() {
                $('.modal').modal('hide');
                $('.loader').hide();
                $('.directory-browser-back-btn').show();
                connection.invoke('DisposeConnection', parseInt($('#directory-browser-server').val()));
                $('#directory-browser-server').val('0').trigger('change');
                $('.directory-browser-content').html('<h3 class="text-secondary text-center">Files & Folders will show here</h3>');
                $('.full-path').html('');
            }

            connection.on('DirectoryList', function (data) {
                $('.directory-browser-content').html('');
                $('.full-path').html(`${createPath(pathStack)}<hr/>`);
                if (pathStack.length > 0) {
                    $('.directory-browser-back-btn').show();
                }
                $('.loader').hide();
                var directories = data.directoryList.split(/\r?\n/g);
                directories.forEach(v => {
                    if (v != '') {
                        $('.directory-browser-content').append(`
                                        <div class="server-directory" data-path="${prepareFiles(v)}">
                                            <i class="fa fa-${isDirectory(v) ? 'folder text-warning' : 'file-video-o text-secondary'}"></i> ${prepareFiles(v)}
                                        </div>
                                    `);
                    }
                });
            });
            $('#directory-browser-server').on('change', function () {
                pathStack = [];
                if ($(this).val() == 0) {
                    return;
                }
                $('.loader').show();
                $('.directory-browser-back-btn').hide();
                connection.invoke('ListServerDirectory', parseInt($(this).val()), createPath(pathStack));
            });
            $('body').on('click', '.server-directory', function () {
                $('.loader').show();
                $('.directory-browser-back-btn').hide();
                pathStack.push($(this).attr('data-path'));
                if (pathStack[pathStack.length - 1].split('.').length < 2) {
                    connection.invoke('ListServerDirectory', parseInt($('#directory-browser-server').val()), createPath(pathStack));
                } else {
                    let currentServer = $('#directory-browser-server').val();
                    $('#Source').val(`${currentServer + createPath(pathStack)}`);
                    resetBrowser();
                }
            });
            $('.directory-browser-back-btn').on('click', function () {
                $('.loader').show();
                $(this).hide();
                pathStack.pop();
                connection.invoke('ListServerDirectory', parseInt($('#directory-browser-server').val()), createPath(pathStack));
            });
            window.onbeforeunload = function () {
                connection.invoke('DisposeConnection', parseInt($('#directory-browser-server').val()));
            };
            connection.start();
        });
    </script>
}