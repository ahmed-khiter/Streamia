@model Movie
@{
    ViewData["Title"] = "Add Movie";
}

@section Styles {
    <link href="~/lib/select2/css/select2.min.css" rel="stylesheet" />
    <link href="~/ttskch/select2-bootstrap4-theme/dist/select2-bootstrap4.min.css" rel="stylesheet" />
    <link href="~/lib/switchery/switchery.css" rel="stylesheet" />
}

<partial name="~/Views/Partials/_Navigation.cshtml" />

<form method="post">
    <div class="row">
        <div class="form-group col-md-3">
            <label asp-for="Name"></label>
            <div id="searchia">
                <input asp-for="Name" class="form-control" autocomplete="off" />
            </div>
            <span class="text-danger" asp-validation-for="Name"></span>
        </div>
        <div class="form-group col-md-3">
            <label asp-for="Source"></label>
            <div class="exploriable">
                <input asp-for="Source" class="form-control" placeholder="URL or browse servers" />
                <button type="button" class="main-btn" onclick="exploreia.open()">
                    <i class="fa fa-folder-open"></i>
                </button>
            </div>
            <span class="text-danger" asp-validation-for="Source"></span>
        </div>
        <div class="form-group col-md-3">
            <label asp-for="CategoryId"></label>
            <select asp-for="CategoryId" asp-items="@(new SelectList(ViewBag.Categories,"Id","Name"))" class="form-control">
            </select>
            <span class="text-danger" asp-validation-for="CategoryId"></span>
        </div>
        <div class="form-group col-md-3">
            <label asp-for="PosterUrl"></label>
            <input asp-for="PosterUrl" class="form-control" />
            <span class="text-danger" asp-validation-for="PosterUrl"></span>
        </div>
        <div class="form-group col-md-3">
            <label asp-for="Overview"></label>
            <input asp-for="Overview" class="form-control" />
            <span class="text-danger" asp-validation-for="Overview"></span>
        </div>
        <div class="form-group col-md-3">
            <label asp-for="Cast"></label>
            <input asp-for="Cast" class="form-control" />
            <span class="text-danger" asp-validation-for="Cast"></span>
        </div>
        <div class="form-group col-md-3">
            <label asp-for="Director"></label>
            <input asp-for="Director" class="form-control" />
            <span class="text-danger" asp-validation-for="Director"></span>
        </div>
        <div class="form-group col-md-3">
            <label asp-for="Gener"></label>
            <input asp-for="Gener" class="form-control" />
            <span class="text-danger" asp-validation-for="Gener"></span>
        </div>
        <div class="form-group col-md-3">
            <label asp-for="ReleaseDate"></label>
            <input asp-for="ReleaseDate" class="form-control" />
            <span class="text-danger" asp-validation-for="ReleaseDate"></span>
        </div>
        <div class="form-group col-md-3">
            <label asp-for="Runtime"></label>
            <input asp-for="Runtime" class="form-control" />
            <span class="text-danger" asp-validation-for="Runtime"></span>
        </div>
        <div class="form-group col-md-3">
            <label asp-for="Rating"></label>
            <input asp-for="Rating" class="form-control" />
            <span class="text-danger" asp-validation-for="Rating"></span>
        </div>
        <div class="form-group col-md-3">
            <label asp-for="BouquetIds"></label>
            <select asp-for="BouquetIds" asp-items="@(new SelectList(ViewBag.Bouquets,"Id","Name"))" class="form-control" multiple></select>
            <span class="text-danger" asp-validation-for="BouquetIds"></span>
        </div>
    </div>
    <div class="row">
        <div class="form-group col-md-3">
            <input asp-for="StreamDirectly" class="js-switch" />
            <label asp-for="StreamDirectly"></label>
        </div>
    </div>
    <hr />
    <button class="btn btn-success">
        <i class="fa fa-plus"></i> Add
    </button>
</form>

@section Scripts
{
    <script src="~/lib/signalr/dist/browser/signalr.min.js"></script>
    <script src="~/lib/select2/js/select2.full.min.js"></script>
    <script src="~/lib/switchery/switchery.js"></script>
    <script src="~/js/Searchia.js" asp-append-version="true"></script>
    <script src="~/js/TMDB.js" asp-append-version="true"></script>
    <script src="~/js/Exploreia.js" asp-append-version="true"></script>
    <script>
        window.addEventListener('load', function () {
            $('select:not(.ex-server-dropdown)').select2({
                theme: 'bootstrap4'
            });

            let elems = Array.prototype.slice.call(document.querySelectorAll('.js-switch'));

            elems.forEach(function (html) {
                new Switchery(html);
            });
        });

        const searchia = new Searchia();
        const tmdb = new TMDB('415e9238d5188172426c3858b367e468');

        searchia.onTyping(value => {
            tmdb.search(value, 'movie', response => {
                response.results.forEach(result => {
                    searchia.onResult(result.id, `${result.title} (${result.release_date ? result.release_date.split('-')[0] : ''})`);
                });
            });
        });

        searchia.onResultClick(id => {
            tmdb.find(`movie/${id}`, 'credits', response => {
                let genres = [];
                let cast = [];
                let director = null;
                response.genres.forEach(genre => {
                    genres.push(genre.name);
                });
                response.credits.cast.forEach(credit => {
                    cast.push(credit.name);
                });
                for (let person of response.credits.crew) {
                    if (person.department === "Directing") {
                        director = person.name;
                        break;
                    }
                }
                $('#Name').val(response.title);
                $('#PosterUrl').val(tmdb.generatePosterUrl(response.poster_path));
                $('#Overview').val(response.overview);
                $('#Rating').val(response.vote_average);
                $('#Runtime').val(response.runtime);
                $('#Gener').val(genres.join(','));
                $('#Cast').val(cast.join(','));
                $('#ReleaseDate').val(response.release_date);
                $('#Director').val(director);
            });
        });

        const exploreia = new Exploreia({
            pickFile: true
        });

        exploreia.render(@Html.Raw(Json.Serialize(ViewBag.Servers)));

        const connection = new signalR.HubConnectionBuilder().withUrl("/directory-browser-hub").build();
        connection.start();

        connection.on('DirectoryList', data => {
            exploreia.renderDirectories(data.directoryList);
        });

        exploreia.onChange((server, path) => {
            connection.invoke('ListServerDirectory', server, path).catch(() => {
                exploreia.onError();
            });
        });

        exploreia.onFilePick(file => {
            $('#Source').val(`${exploreia.currentServer + file}`);
            exploreia.close();
            exploreia.resetAll();
            connection.invoke('DisposeConnection', exploreia.currentServer).catch(() => {
                exploreia.onError();
            });
        });

        exploreia.onAbort(server => {
            connection.invoke('DisposeConnection', server).catch(() => {
                exploreia.onError();
            });
        });
    </script>
}