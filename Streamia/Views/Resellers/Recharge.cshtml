@model Streamia.Models.ViewModels.RechargeViewModel
@{
    ViewData["Title"] = "Recharge Credit";
    ViewData["DisableSearch"] = string.Empty;
}

<pre class="pre">
    Price: <strong>$@Model.Setting.PointPrice.ToString("0.0")</strong>
</pre>

<div class="payment-container">
    <div class="payment-loader text-center">
        <i class="fa fa-fw fa-spinner fa-3x fa-pulse text-primary"></i>
    </div>
    <form method="post" id="recharge-form">
        <input type="hidden" asp-for="Recharge.PaymentId" id="PaymentId" />
        <input type="hidden" asp-for="Recharge.PaymentToken" id="PaymentToken" />
        <input type="hidden" asp-for="Recharge.PayerId" id="PayerId" />
        <input type="hidden" asp-for="Recharge.OrderId" id="OrderId" />
        <input type="hidden" asp-for="Recharge.Points" id="Recharge.Points" />
        <div class="form-group">
            <label asp-for="Points"></label>
            <input asp-for="Points" class="form-control"/>
            <span class="text-danger" asp-validation-for="Points"></span>
        </div>
    </form>

    <div id="paypal-button-container"></div>
</div>


@section Scripts {
    <script src="https://www.paypal.com/sdk/js?client-id=Ad5ZUB4yHxOhwj3t9_bZTGskZfRc6NzN09yyhreebNKWcKLEDLMXZhLeFbc8vUVRfEee45mtr694-ITn"></script>
    <script>
        const rate = @Model.Setting.PointPrice;
        function toggleLoader(shouldShow) {
            let loader = document.querySelector('.payment-loader');
            let display = 'none';
            if (shouldShow) {
                display = 'block';
            }
            loader.style.display = display;
        }
        paypal.Buttons({
            commit: true,
            createOrder: function (data, actions) {
                toggleLoader(true);
                return actions.order.create({
                    purchase_units: [{
                        amount: {
                            value: (rate * document.getElementById("Points").value)
                        }
                    }]
                });
            },
            onApprove: function (data, actions) {
                return actions.order.capture().then(function (details) {
                    console.warn(details);
                    document.getElementById('Recharge.Points').value = document.getElementById("Points").value;
                    alert('Transaction completed by ' + details.payer.name.given_name);
                }).catch(() => { });
            },
            onError: function (err) {
                toggleLoader(false);
                alert("Points should be at least 1 point");
            },
            onCancel: function (data, actions) {
                toggleLoader(false);
                alert("Payment has been cancelled");
            },
            style: {
                layout: "horizontal",
                color: 'blue',
                shape: 'pill',
                label: 'pay',
                height: 40
            }
        }).render('#paypal-button-container');
    </script>
}
